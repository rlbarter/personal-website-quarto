{"title":"Getting fancy with ggplot2: code for alternatives to grouped bar charts","markdown":{"yaml":{"title":"Getting fancy with ggplot2: code for alternatives to grouped bar charts","author":"Rebecca Barter","format":{"html":{"toc":true,"toc-location":"left"}},"categories":["R","visualization"],"date":"2018-05-29","description":"In this post I present the code I wrote to prodocue the figures in my previous post about alternatives to grouped bar charts."},"headingText":"Bars","containsRefs":false,"markdown":"\n\n\nHere I provide the code I used to create the figures from my [previous post on alternatives to grouped bar charts](../2018-05-29_alternatives_dodged_bars/index.html). You are encouraged to play with them yourself!\n\nThe key to creating unique and creative visualizations using libraries such as ggplot (or even just straight SVG) is (1) to move away from thinking of data visualization only as the default plot types (bar plots, boxplots, scatterplots, etc), and (2) to realise that most visualizations are essentially lines and circles that you can arrange however you desire in space. Drawing a picture on paper before beginning to code your data viz is a great way to create customized visualizations for each dataset.\n\n\nFirst, I load in the libraries (the data comes from the `dslabs` library), and convert the data to long-form for creating the grouped bar charts.\n\n```{r message=FALSE, warning=FALSE}\n# load in libraries\nlibrary(tidyverse)\nlibrary(dslabs)\n# combine male and female success rates into single data frame\nsuccess_rates <- rbind(\n  # male success rates\n  transmute(research_funding_rates, \n            discipline, \n            success = success_rates_men, \n            gender = \"Male\"),\n  # female success rates\n  transmute(research_funding_rates, \n            discipline, \n            success = success_rates_women, \n            gender = \"Female\")) \n```\n\n```{r}\n# print the data\nsuccess_rates\n```\n\n\n\nI used `geom_bar()` to create a grouped bar chart containing the data. I grouped by gender by setting `fill = gender` within the `aes()` function.\n\n```{r message=FALSE, warning=FALSE, fig.align=\"center\"}\n# make grouped bar plot\nggplot(success_rates) +\n  # add bar for each discipline colored by gender\n  geom_bar(aes(x = discipline, y = success, fill = gender),\n           stat = \"identity\", position = \"dodge\") +\n  # name axes and remove gap between bars and y-axis\n  scale_y_continuous(\"Success Rate\", expand = c(0, 0)) +\n  scale_x_discrete(\"Discipline\") +\n  scale_fill_manual(values = c(\"#468189\", \"#9DBEBB\")) +\n  # remove grey theme\n  theme_classic(base_size = 18) +\n  # rotate x-axis and remove superfluous axis elements\n  theme(axis.text.x = element_text(angle = 90, \n                                   hjust = 1, vjust = 0),\n        axis.line = element_blank(),\n        axis.ticks.x = element_blank()) \n```\n\n## Slope plot\n\nTo create the sloped chart, it ends up being easier to keep the data in its original wide form.\n\n\nThe first element I add is the slopes from men to women using `geom_segment()`. Each slope is colored based on whether men or women are more successful.\n\n```{r message=FALSE, warning=FALSE, fig.height = 8, fig.align=\"center\"}\ngg_slope <- research_funding_rates %>%\n  # add a variable for when men are more successful than women (for colours)\n  mutate(men_more_successful = success_rates_men > success_rates_women) %>%\n  ggplot() +\n  # add a line segment that goes from men to women for each discipline\n  geom_segment(aes(x = 1, xend = 2, \n                   y = success_rates_men, \n                   yend = success_rates_women,\n                   group = discipline,\n                   col = men_more_successful), \n               size = 1.2) +\n  # set the colors\n  scale_color_manual(values = c(\"#468189\", \"#9DBEBB\"), guide = \"none\")  +\n  # remove all axis stuff\n  theme_classic() + \n  theme(axis.line = element_blank(),\n        axis.text = element_blank(),\n        axis.title = element_blank(),\n        axis.ticks = element_blank()) \ngg_slope\n```\n\nNext, I add a left and right axis at the start and end of the slopes.\n\n```{r message=FALSE, warning=FALSE, fig.height = 8, fig.align=\"center\"}\ngg_slope <- gg_slope +\n  # add vertical lines that act as axis for men\n  geom_segment(x = 1, xend = 1, \n               y = min(research_funding_rates$success_rates_men) - 2,\n               yend = max(research_funding_rates$success_rates_men) + 1,\n               col = \"grey70\", size = 0.5) +\n  # add vertical lines that act as axis for women\n  geom_segment(x = 2, xend = 2, \n               y = min(research_funding_rates$success_rates_men) - 2,\n               yend = max(research_funding_rates$success_rates_men) + 1,\n               col = \"grey70\", size = 0.5) +\n  # add the words \"men\" and \"women\" above their axes\n  geom_text(aes(x = x, y = y, label = label),\n            data = data.frame(x = 1:2, \n                              y = 2 + max(research_funding_rates$success_rates_men),\n                              label = c(\"men\", \"women\")),\n            col = \"grey30\",\n            size = 6) \ngg_slope  \n```\n\nI also need to add an identifier for each discipline's slope. I do this by annotating the plot with text.\n\n```{r message=FALSE, warning=FALSE, fig.height = 8, fig.align=\"center\"}\ngg_slope <- gg_slope +\n  # add the label and success rate for each discipline next the men axis\n  geom_text(aes(x = 1 - 0.03, \n                y = success_rates_men, \n                label = paste0(discipline, \", \", \n                               round(success_rates_men, 1), \"%\")),\n             col = \"grey30\", hjust = \"right\") +\n  # add the success rate next to each point on the women axis\n  geom_text(aes(x = 2 + 0.08, \n                y = success_rates_women, \n                label = paste0(round(success_rates_women, 1), \"%\")),\n            col = \"grey30\") +\n  # set the limits of the x-axis so that the labels are not cut off\n  scale_x_continuous(limits = c(0.5, 2.1)) \ngg_slope\n```\n\nFinally, I decide to add points (for aesthetic purposes). Behind each circle, I add a slightly larger white circle to act as a border and to give a slight \"gap\" look.\n\n```{r message=FALSE, warning=FALSE, fig.height = 8, fig.align=\"center\"}\ngg_slope <- gg_slope + \n  \n  # add the white outline for the points at each rate for men\n  geom_point(aes(x = 1, \n                 y = success_rates_men), size = 4.5,\n             col = \"white\") +\n  # add the white outline for the points at each rate for women\n  geom_point(aes(x = 2, \n                 y = success_rates_women), size = 4.5,\n             col = \"white\") +\n  \n  # add the actual points at each rate for men\n  geom_point(aes(x = 1, \n                 y = success_rates_men), size = 4,\n             col = \"grey60\") +\n  # add the actual points at each rate for men\n  geom_point(aes(x = 2, \n                 y = success_rates_women), size = 4,\n             col = \"grey60\") \ngg_slope\n```\n\n## Horizontal dots\n\nTo create the horizontal dot plot, I again keep the data in its original wide-form but I arrange the disciplines in order of women's success rate (this will make the plot easier to read).\n\nThe first things I do to create the dot plot is add the horizontal discipline lines and the points for the success rates of men and women. \n\n\n```{r message = FALSE, warning = FALSE, fig.width = 8, fig.align=\"center\"}\ngg_dot <- research_funding_rates %>%\n  # rearrange the factor levels for discipline by rates for women\n  arrange(success_rates_women) %>%\n  mutate(discipline = fct_inorder(discipline)) %>%\n  \n  ggplot() +\n  # remove axes and superfluous grids\n  theme_classic() +\n  theme(axis.title = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.line = element_blank()) +\n  \n  \n  # add a dummy point for scaling purposes\n  geom_point(aes(x = 12, y = discipline), \n             size = 0, col = \"white\") + \n  \n  # add the horizontal discipline lines\n  geom_hline(yintercept = 1:9, col = \"grey80\") +\n  \n  # add a point for each male success rate\n  geom_point(aes(x = success_rates_men, y = discipline), \n             size = 11, col = \"#9DBEBB\") +\n  # add a point for each female success rate\n  geom_point(aes(x = success_rates_women, y = discipline),\n             size = 11, col = \"#468189\") \ngg_dot\n\n```\n\nSince I really like to annotate my figures with text so that the audience can work less hard, I add the success rate on top of each dot. I also prefer to annotate features my plot directly instead of using legends, so I also add a label for men and women.\n\n```{r message = FALSE, warning = FALSE, fig.width = 8, fig.align=\"center\"}\ngg_dot <- gg_dot + \n  # add the text (%) for each male success rate\n  geom_text(aes(x = success_rates_men, y = discipline, \n                label = paste0(round(success_rates_men, 1))),\n            col = \"black\") +\n  # add the text (%) for each female success rate\n  geom_text(aes(x = success_rates_women, y = discipline, \n                label = paste0(round(success_rates_women, 1))),\n            col = \"white\") +\n  # add a label above the first two points\n  geom_text(aes(x = x, y = y, label = label, col = label),\n            data.frame(x = c(25.6 - 1.1, 26.5 + 0.6), y = 10, \n                       label = c(\"women\", \"men\")), size = 6) +\n  scale_color_manual(values = c(\"#9DBEBB\", \"#468189\"), guide = \"none\") +\n  \n  # manually specify the x-axis\n  scale_x_continuous(breaks = c(15, 20, 25), \n                     labels = c(\"15%\", \"20%\", \"25%\")) +\n  # manually set the spacing above and below the plot\n  scale_y_discrete(expand = c(0.2, 0)) \ngg_dot\n```\n\n\n## References\n\n- The research funding data comes from Rafael Irizarry's `dslabs` R package\n\n- The slope and dot plot ideas for this post come from [Ann K. Emery's post](http://annkemery.com/clustered-bar-chart/) on the same topic. ","srcMarkdownNoYaml":"\n\n\nHere I provide the code I used to create the figures from my [previous post on alternatives to grouped bar charts](../2018-05-29_alternatives_dodged_bars/index.html). You are encouraged to play with them yourself!\n\nThe key to creating unique and creative visualizations using libraries such as ggplot (or even just straight SVG) is (1) to move away from thinking of data visualization only as the default plot types (bar plots, boxplots, scatterplots, etc), and (2) to realise that most visualizations are essentially lines and circles that you can arrange however you desire in space. Drawing a picture on paper before beginning to code your data viz is a great way to create customized visualizations for each dataset.\n\n## Bars \n\nFirst, I load in the libraries (the data comes from the `dslabs` library), and convert the data to long-form for creating the grouped bar charts.\n\n```{r message=FALSE, warning=FALSE}\n# load in libraries\nlibrary(tidyverse)\nlibrary(dslabs)\n# combine male and female success rates into single data frame\nsuccess_rates <- rbind(\n  # male success rates\n  transmute(research_funding_rates, \n            discipline, \n            success = success_rates_men, \n            gender = \"Male\"),\n  # female success rates\n  transmute(research_funding_rates, \n            discipline, \n            success = success_rates_women, \n            gender = \"Female\")) \n```\n\n```{r}\n# print the data\nsuccess_rates\n```\n\n\n\nI used `geom_bar()` to create a grouped bar chart containing the data. I grouped by gender by setting `fill = gender` within the `aes()` function.\n\n```{r message=FALSE, warning=FALSE, fig.align=\"center\"}\n# make grouped bar plot\nggplot(success_rates) +\n  # add bar for each discipline colored by gender\n  geom_bar(aes(x = discipline, y = success, fill = gender),\n           stat = \"identity\", position = \"dodge\") +\n  # name axes and remove gap between bars and y-axis\n  scale_y_continuous(\"Success Rate\", expand = c(0, 0)) +\n  scale_x_discrete(\"Discipline\") +\n  scale_fill_manual(values = c(\"#468189\", \"#9DBEBB\")) +\n  # remove grey theme\n  theme_classic(base_size = 18) +\n  # rotate x-axis and remove superfluous axis elements\n  theme(axis.text.x = element_text(angle = 90, \n                                   hjust = 1, vjust = 0),\n        axis.line = element_blank(),\n        axis.ticks.x = element_blank()) \n```\n\n## Slope plot\n\nTo create the sloped chart, it ends up being easier to keep the data in its original wide form.\n\n\nThe first element I add is the slopes from men to women using `geom_segment()`. Each slope is colored based on whether men or women are more successful.\n\n```{r message=FALSE, warning=FALSE, fig.height = 8, fig.align=\"center\"}\ngg_slope <- research_funding_rates %>%\n  # add a variable for when men are more successful than women (for colours)\n  mutate(men_more_successful = success_rates_men > success_rates_women) %>%\n  ggplot() +\n  # add a line segment that goes from men to women for each discipline\n  geom_segment(aes(x = 1, xend = 2, \n                   y = success_rates_men, \n                   yend = success_rates_women,\n                   group = discipline,\n                   col = men_more_successful), \n               size = 1.2) +\n  # set the colors\n  scale_color_manual(values = c(\"#468189\", \"#9DBEBB\"), guide = \"none\")  +\n  # remove all axis stuff\n  theme_classic() + \n  theme(axis.line = element_blank(),\n        axis.text = element_blank(),\n        axis.title = element_blank(),\n        axis.ticks = element_blank()) \ngg_slope\n```\n\nNext, I add a left and right axis at the start and end of the slopes.\n\n```{r message=FALSE, warning=FALSE, fig.height = 8, fig.align=\"center\"}\ngg_slope <- gg_slope +\n  # add vertical lines that act as axis for men\n  geom_segment(x = 1, xend = 1, \n               y = min(research_funding_rates$success_rates_men) - 2,\n               yend = max(research_funding_rates$success_rates_men) + 1,\n               col = \"grey70\", size = 0.5) +\n  # add vertical lines that act as axis for women\n  geom_segment(x = 2, xend = 2, \n               y = min(research_funding_rates$success_rates_men) - 2,\n               yend = max(research_funding_rates$success_rates_men) + 1,\n               col = \"grey70\", size = 0.5) +\n  # add the words \"men\" and \"women\" above their axes\n  geom_text(aes(x = x, y = y, label = label),\n            data = data.frame(x = 1:2, \n                              y = 2 + max(research_funding_rates$success_rates_men),\n                              label = c(\"men\", \"women\")),\n            col = \"grey30\",\n            size = 6) \ngg_slope  \n```\n\nI also need to add an identifier for each discipline's slope. I do this by annotating the plot with text.\n\n```{r message=FALSE, warning=FALSE, fig.height = 8, fig.align=\"center\"}\ngg_slope <- gg_slope +\n  # add the label and success rate for each discipline next the men axis\n  geom_text(aes(x = 1 - 0.03, \n                y = success_rates_men, \n                label = paste0(discipline, \", \", \n                               round(success_rates_men, 1), \"%\")),\n             col = \"grey30\", hjust = \"right\") +\n  # add the success rate next to each point on the women axis\n  geom_text(aes(x = 2 + 0.08, \n                y = success_rates_women, \n                label = paste0(round(success_rates_women, 1), \"%\")),\n            col = \"grey30\") +\n  # set the limits of the x-axis so that the labels are not cut off\n  scale_x_continuous(limits = c(0.5, 2.1)) \ngg_slope\n```\n\nFinally, I decide to add points (for aesthetic purposes). Behind each circle, I add a slightly larger white circle to act as a border and to give a slight \"gap\" look.\n\n```{r message=FALSE, warning=FALSE, fig.height = 8, fig.align=\"center\"}\ngg_slope <- gg_slope + \n  \n  # add the white outline for the points at each rate for men\n  geom_point(aes(x = 1, \n                 y = success_rates_men), size = 4.5,\n             col = \"white\") +\n  # add the white outline for the points at each rate for women\n  geom_point(aes(x = 2, \n                 y = success_rates_women), size = 4.5,\n             col = \"white\") +\n  \n  # add the actual points at each rate for men\n  geom_point(aes(x = 1, \n                 y = success_rates_men), size = 4,\n             col = \"grey60\") +\n  # add the actual points at each rate for men\n  geom_point(aes(x = 2, \n                 y = success_rates_women), size = 4,\n             col = \"grey60\") \ngg_slope\n```\n\n## Horizontal dots\n\nTo create the horizontal dot plot, I again keep the data in its original wide-form but I arrange the disciplines in order of women's success rate (this will make the plot easier to read).\n\nThe first things I do to create the dot plot is add the horizontal discipline lines and the points for the success rates of men and women. \n\n\n```{r message = FALSE, warning = FALSE, fig.width = 8, fig.align=\"center\"}\ngg_dot <- research_funding_rates %>%\n  # rearrange the factor levels for discipline by rates for women\n  arrange(success_rates_women) %>%\n  mutate(discipline = fct_inorder(discipline)) %>%\n  \n  ggplot() +\n  # remove axes and superfluous grids\n  theme_classic() +\n  theme(axis.title = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.line = element_blank()) +\n  \n  \n  # add a dummy point for scaling purposes\n  geom_point(aes(x = 12, y = discipline), \n             size = 0, col = \"white\") + \n  \n  # add the horizontal discipline lines\n  geom_hline(yintercept = 1:9, col = \"grey80\") +\n  \n  # add a point for each male success rate\n  geom_point(aes(x = success_rates_men, y = discipline), \n             size = 11, col = \"#9DBEBB\") +\n  # add a point for each female success rate\n  geom_point(aes(x = success_rates_women, y = discipline),\n             size = 11, col = \"#468189\") \ngg_dot\n\n```\n\nSince I really like to annotate my figures with text so that the audience can work less hard, I add the success rate on top of each dot. I also prefer to annotate features my plot directly instead of using legends, so I also add a label for men and women.\n\n```{r message = FALSE, warning = FALSE, fig.width = 8, fig.align=\"center\"}\ngg_dot <- gg_dot + \n  # add the text (%) for each male success rate\n  geom_text(aes(x = success_rates_men, y = discipline, \n                label = paste0(round(success_rates_men, 1))),\n            col = \"black\") +\n  # add the text (%) for each female success rate\n  geom_text(aes(x = success_rates_women, y = discipline, \n                label = paste0(round(success_rates_women, 1))),\n            col = \"white\") +\n  # add a label above the first two points\n  geom_text(aes(x = x, y = y, label = label, col = label),\n            data.frame(x = c(25.6 - 1.1, 26.5 + 0.6), y = 10, \n                       label = c(\"women\", \"men\")), size = 6) +\n  scale_color_manual(values = c(\"#9DBEBB\", \"#468189\"), guide = \"none\") +\n  \n  # manually specify the x-axis\n  scale_x_continuous(breaks = c(15, 20, 25), \n                     labels = c(\"15%\", \"20%\", \"25%\")) +\n  # manually set the spacing above and below the plot\n  scale_y_discrete(expand = c(0.2, 0)) \ngg_dot\n```\n\n\n## References\n\n- The research funding data comes from Rafael Irizarry's `dslabs` R package\n\n- The slope and dot plot ideas for this post come from [Ann K. Emery's post](http://annkemery.com/clustered-bar-chart/) on the same topic. "},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"2018-05-29_getting_fancy_ggplot2.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.56","theme":"simplex","linkcolor":"#6633c4","code-copy":true,"footnotes-hover":true,"title-block-banner":true,"comments":{"utterances":{"repo":"rlbarter/blog_comments"}},"title":"Getting fancy with ggplot2: code for alternatives to grouped bar charts","author":"Rebecca Barter","categories":["R","visualization"],"date":"2018-05-29","description":"In this post I present the code I wrote to prodocue the figures in my previous post about alternatives to grouped bar charts.","toc-location":"left"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}